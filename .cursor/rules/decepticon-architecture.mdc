---
alwaysApply: true
---

<rule>
<meta>
<title>Decepticon Architecture Rules</title>
<description>Essential rules for async, memory, logging, and security in Decepticon</description>
<applies-to>
<file-matcher glob="src/**/*.py"/>
<file-matcher glob="frontend/**/*.py"/>
<file-matcher glob="*.py"/>
</applies-to>
</meta>

<requirements>
<requirement priority="critical">
<description>Use async/await and type hints for all agent and workflow code.</description>
<examples>
<correct-example><![CDATA[
async def make_agent() -> Any:
    ...
]]></correct-example>
<incorrect-example><![CDATA[
def make_agent():
    ...
]]></incorrect-example>
</examples>
</requirement>

<requirement priority="critical">
<description>Use centralized memory, config, and logging (never local or hardcoded instances).</description>
<examples>
<correct-example><![CDATA[
from src.utils.memory import get_store
store = get_store()
]]></correct-example>
<incorrect-example><![CDATA[
store = InMemoryStore()
]]></incorrect-example>
</examples>
</requirement>

<requirement priority="critical">
<description>Never hardcode secrets; always use environment variables.</description>
<examples>
<correct-example><![CDATA[
os.getenv("OPENAI_API_KEY")
]]></correct-example>
<incorrect-example><![CDATA[
api_key = "sk-abc123..."
]]></incorrect-example>
</examples>
</requirement>
</requirements>
</rule>
<rule>
<meta>
<title>Decepticon Architecture Rules</title>
<description>Essential rules for async, memory, logging, and security in Decepticon</description>
<applies-to>
<file-matcher glob="src/**/*.py"/>
<file-matcher glob="frontend/**/*.py"/>
<file-matcher glob="*.py"/>
</applies-to>
</meta>

<requirements>
<requirement priority="critical">
<description>Use async/await and type hints for all agent and workflow code.</description>
<examples>
<correct-example><![CDATA[
async def make_agent() -> Any:
    ...
]]></correct-example>
<incorrect-example><![CDATA[
def make_agent():
    ...
]]></incorrect-example>
</examples>
</requirement>

<requirement priority="critical">
<description>Use centralized memory, config, and logging (never local or hardcoded instances).</description>
<examples>
<correct-example><![CDATA[
from src.utils.memory import get_store
store = get_store()
]]></correct-example>
<incorrect-example><![CDATA[
store = InMemoryStore()
]]></incorrect-example>
</examples>
</requirement>

<requirement priority="critical">
<description>Never hardcode secrets; always use environment variables.</description>
<examples>
<correct-example><![CDATA[
os.getenv("OPENAI_API_KEY")
]]></correct-example>
<incorrect-example><![CDATA[
api_key = "sk-abc123..."
]]></incorrect-example>
</examples>
</requirement>
</requirements>
</rule>
